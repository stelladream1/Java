import java.util.Arrays;
        import java.util.Scanner;

public class Main {

    public static boolean nextPermutation(int[] a) {

        int i = a.length-1;
        while(i>0 && a[i-1] >= a[i]){
            i= i-1;
        }
        if(i <=0){
            return false;
        }
        int j = a.length-1;
        while(a[j] <= a[i-1]){
            j = j-1;
        }

        int temp = a[j];
        a[j] = a[i-1];
        a[i-1] = temp;

        j = a.length-1;
        while(i <j){
            temp = a[j];
            a[j] = a[i];
            a[i] = temp;
            i = i + 1;
            j = j -1;
        }
        return true;
    }

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][n];
        for (int i=0; i<n; i++) {
            for (int j=0; j<n; j++) {
                a[i][j] = sc.nextInt();
            }
        }
        int [] d = new int[n];
        for(int i =0; i<n;i++){
            d[i] = i;
        }
        int minResult = Integer.MAX_VALUE;

        do{
            boolean flag = true;
            int sum = 0;
            for(int i =0; i<n-1;i++){
                if(a[d[i]][d[i+1]] == 0){
                    flag = false;
                }else{
                    sum = sum + a[d[i]][d[i+1]];
                }
            }
            if(flag && a[d[n-1]][d[0]] !=0){
                sum = sum + a[d[n-1]][d[0]];
                minResult = Math.min(sum, minResult);
            }


        }while(nextPermutation(d));

        System.out.println(minResult);

    }
}
